name: Create Release & Deploy to Staging

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Create release version
        id: release
        uses: kranthisai-1/workflows/semantic-release@main

      - name: Slack Notification - Release Success
        if: ${{ steps.release.outputs.version != '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Release successful"
          message: "New version `v${{ steps.release.outputs.version }}` has been released."
          message_type: "success"

      - name: Slack Notification - Release Failed
        if: ${{ steps.release.outputs.version == '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Release failed"
          message: "Pushed to `main`, but release version could not be created."
          message_type: "danger"

  deploy:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Prepare Environment
        run: cp .env.staging .env.local

      - name: Pull Project Settings
        run: npx vercel pull --yes --token ${{ secrets.VERCEL_TOKEN }} --environment=preview

      - name: Build with Vercel
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: vercel_deploy
        run: |
          PREVIEW_URL=$(npx vercel@latest deploy \
            --prebuilt --archive=tgz --target=preview \
            --token ${{ secrets.VERCEL_TOKEN }} --yes --force | tail -1)
          echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Alias to Temporary URL (Testing)
        run: |
          DEPLOY_URL=${{ steps.vercel_deploy.outputs.url }}
          echo "Deploy URL: $DEPLOY_URL"
          npx vercel alias set "$DEPLOY_URL" "staging.vercel.app" --token ${{ secrets.VERCEL_TOKEN }} --yes

      - name: Slack Notification - Deploy Success
        if: ${{ success() }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Staging Deployment Complete"
          message: "Version `v${{ needs.release.outputs.version }}` has been deployed to *staging*."
          message_type: "success"

      - name: Slack Notification - Deploy Failed
        if: ${{ failure() }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Deployment Failed"
          message: "Failed to deploy version `v${{ needs.release.outputs.version }}` to staging."
          message_type: "danger"
