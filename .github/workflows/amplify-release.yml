name: Tag-based Staging Deployment

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Create release version
        id: release
        uses: kranthisai-1/workflows/semantic-release@main

      - name: Slack Notification - Release Success
        if: ${{ steps.release.outputs.version != '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Release successful"
          message: "New version `v${{ steps.release.outputs.version }}` has been released."
          message_type: "success"

      - name: Slack Notification - Release Failed
        if: ${{ steps.release.outputs.version == '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Release failed"
          message: "Pushed to `main`, but release version could not be created."
          message_type: "danger"

  build:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Prepare Environment
        run: cp .env.staging .env.local

      - name: Pull Project Settings
        run: npx vercel pull --yes --token ${{ secrets.VERCEL_TOKEN }} --environment=preview

      - name: Build with Vercel
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Archive .vercel/output
        run: tar -czf vercel-output.tgz .vercel/output

      - name: Upload Build Artifact (tgz)
        uses: actions/upload-artifact@v4
        with:
          name: vercel-build
          path: vercel-output.tgz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: vercel-build
          path: .

      - name: Extract Build Archive
        run: tar -xzf vercel-output.tgz

      - name: Deploy to Vercel (Prebuilt)
        run: |
          npx vercel deploy --prebuilt --archive=tgz \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --target=preview --yes --force

      - name: Slack Notification - Deploy Success
        if: ${{ success() }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Staging Deployment Complete"
          message: "Latest build has been deployed to *staging*."
          message_type: "success"
