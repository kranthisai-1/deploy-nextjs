name: Preview Deployment

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create release version
        id: release
        uses: kranthisai-1/workflows/semantic-release@main

      - name: Release success alert
        if: ${{ steps.release.outputs.version != '' && github.ref_name == github.event.repository.default_branch }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Release successful"
          message: "New version `v${{ steps.release.outputs.version }}` has been released."
          message_type: "success"

      - name: Link Vercel project
        run: |
          npx vercel link --yes --token ${{ secrets.VERCEL_TOKEN }} \
            --project prj_BxoaUQaP1tgrZr5WmjZiwvHc2K91 \
            --scope team_hbtqJO0t3tEq8rpWJdcoYkDZ

      - name: Prepare Environment
        run: |
          cp .env.staging .env.local

      - name: Pull Project Settings
        run: npx vercel pull --yes --token ${{ secrets.VERCEL_TOKEN }} --environment=preview

      - name: Build
        run: |
          npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy
        run: |
          npx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} \
            --target=preview --yes --force

      - name: Send Slack success notification
        if: ${{ success() && steps.release.outputs.version != '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "Staging Deployment Complete"
          message: "Version `v${{ steps.release.outputs.version }}` was deployed to *staging*."
          message_type: "success"