name: Create Release and Deploy to Staging

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  release_and_deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Create release version
        id: release
        uses: kranthisai-1/workflows/semantic-release@main

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::270290807521:role/GitHubActionsAmplifyDeployRole1
          aws-region: us-east-1

      - name: Build Next.js app (standalone)
        run: |
          npm run build

          mkdir -p dist/.next
          cp -r .next/standalone dist/standalone
          mv dist/standalone/* dist/
          rm -rf dist/standalone
          if [ -d ".next/static" ]; then
            cp -r .next/static dist/.next/
          fi

   
          if [ -d "public" ]; then
            cp -r public dist/
          fi

          cp package.json dist/
          cd dist && zip -r ../build.zip . && cd ..


      - name: Upload build to S3
        run: |
          aws s3 cp build.zip s3://nextjs-admin-builds/releases/v${{ steps.release.outputs.version }}.zip
          aws s3 ls s3://nextjs-admin-builds/releases/v${{ steps.release.outputs.version }}.zip

      - name: Generate pre-signed URL for S3
        id: presign_url
        run: |
          URL=$(aws s3 presign s3://nextjs-admin-builds/releases/v${{ steps.release.outputs.version }}.zip --expires-in 3600)
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Trigger Amplify deployment (staging)
        run: |
          echo "Using presigned URL: '${{ steps.presign_url.outputs.url }}'"
          aws amplify start-deployment \
           --app-id ddwpoj2b9jk65 \
           --branch-name staging \
           --source-url "${{ steps.presign_url.outputs.url }}"
           
      - name: Send Slack success notification
        if: ${{ success() && steps.release.outputs.version != '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "âœ… Staging Deployment Complete"
          message: "Version `v${{ steps.release.outputs.version }}` was deployed to *staging*."
          message_type: "success"
